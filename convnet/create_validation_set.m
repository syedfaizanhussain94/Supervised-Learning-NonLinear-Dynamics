if ~exist('test_male','var')
load /misc/vlgscratch3/LecunGroup/pablo/TIMIT/TEST/male_audios_short.mat
end

if ~exist('test_female','var')
load /misc/vlgscratch3/LecunGroup/pablo/TIMIT/TEST/female_audios_short.mat
end


idf = [1,3,3;...
    1,3,7;...
    2,5,10;...
    2,6,2];

% USED FOR TESTING
% idf = [1,1,1;...
%     1,1,6;...
%     1,2,9;...
%     1,2,8;...
%     1,4,10;...
%     1,4,2;...
%     2,2,8;...
%     2,2,3;...
%     2,7,4;...
%     2,7,8;...
%     2,8,3;...
%     2,8,5];

idm = [1,1,8;...
    1,6,6;...
    2,9,5;...
    2,13,4];

% USED FOR TESTING
% idm = [1,2,7;...
%     1,2,1;...
%     1,3,1;...
%     1,3,3;...
%     1,7,10;...
%     1,7,9;...
%     2,1,3;...
%     2,1,5;...
%     2,8,2;...
%     2,8,1;...
%     2,16,9;...
%     2,16,10];



% Do the testing
clear options

options.id1 = idf;
options.id2 = idm;

epsilon = 0.0001;
options.epsilon = epsilon;
options.fs = 16000;
options.NFFT = 1024;
options.hop = options.NFFT/2;
options.Npad = 2^15;
options.verbose = 0;

model_cnn = '/misc/vlgscratch3/LecunGroup/pablo/models/cnn/timit-cnn-batch-new/';
load([model_cnn 'net-epoch-55.mat'])
net_cnn = net;

net_cnn_orig.layers = {} ;
for j =1:length(net_cnn.layers)-1
net_cnn_orig.layers{end+1} = net_cnn.layers{j};
end


testFun    = @(Xn) cnn_demix(Xn,net_cnn_orig);

options.SNR_dB = 0;
output_cnn_old = separation_test_net(testFun,test_female,test_male,options);

%valid = get_validation_timit(test_female,test_male,options);